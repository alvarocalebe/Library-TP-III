@model Library.Models.Livro

@{
    Layout = null;
}

<!DOCTYPE html>

<html lang="pt-BR">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Create</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f8f9fa;
            color: #0083aa;
            padding: 20px;
        }

        .form-horizontal {
            background-color: #ffffff;
            padding: 20px;
            border-radius: 5px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        }

        h4 {
            margin-bottom: 20px;
            color: #0083aa;
            
        }

        .form-group {
            margin-bottom: 15px;
        }

        .control-label {
            font-weight: bold;
        }

        .btn {
            background-color: #0083aa;
          
            color: white;
            border: none;
            padding: 10px 15px;
            border-radius: 5px;
            cursor: pointer;
        }

            .btn:hover {
                background-color: #006684;
            }

        .preview-img {
            max-width: 200px;
            max-height: 200px;
            margin-top: 10px;
            display: block;
        }

        .validation-error {
            color: red;
        }
    </style>
</head>
<body>
    @using (Html.BeginForm("Create", "Livros", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Adicionar Novo Livro</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "validation-error" })

            <div class="form-group">
                @Html.LabelFor(model => model.Titulo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Titulo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Titulo, "", new { @class = "validation-error" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.NomeEditora, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.NomeEditora, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NomeEditora, "", new { @class = "validation-error" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.AutorID, "Autor", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("AutorID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.AutorID, "", new { @class = "validation-error" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CategoriaID, "Categoria", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("CategoriaID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CategoriaID, "", new { @class = "validation-error" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Disponivel, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.Disponivel)
                        @Html.ValidationMessageFor(model => model.Disponivel, "", new { @class = "validation-error" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.Label("ImagemUpload", "Upload de Imagem", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input type="file" name="ImagemUpload" id="ImagemUpload" class="form-control" accept="image/*" onchange="previewImage(this)" />
                    <img id="preview" class="preview-img" style="display: none;" />
                    @if (Model != null && !string.IsNullOrEmpty(Model.NomeImagem))
                    {
                        <img src="~/Imagens/@Model.NomeImagem" alt="Imagem Atual" class="preview-img" />
                    }
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Criar" class="btn" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Voltar para a lista", "Index")
    </div>

    <script>
        function previewImage(input) {
            var preview = document.getElementById('preview');
            var file = input.files[0];
            if (file) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    preview.src = e.target.result;
                    preview.style.display = 'block';
                }
                reader.readAsDataURL(file);
            } else {
                preview.style.display = 'none';
            }
        }
    </script>
</body>
</html>
